generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String      @id @default(auto()) @map("_id") @db.ObjectId
  email           String      @unique
  name            String
  image           String?
  password        String
  phone           String?
  verifyToken     Int?
  credit          Int?        @default(2)
  emailVerified   Boolean     @default(false)
  verifyExpiresAt DateTime    @default(now()) @db.Date
  createdAt       DateTime    @default(now()) @db.Date
  updatedAt       DateTime    @default(now()) @db.Date
  estimates       estimates[]
  Payment         Payment[]
}

model accounts {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  v         Int      @map("__v")
  clerk_id  String
  createdAt DateTime @default(now()) @db.Date
  email     String   @unique(map: "email_1")
  image     String
  updatedAt DateTime @default(now()) @db.Date
  userName  String
}

model estimates {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  battery   String
  panel     String
  inverter  String
  charge    String
  total     String
  estimate  String
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now()) @db.Date
  updatedAt DateTime @default(now()) @db.Date
}

model Payment {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  amount        Int
  currency      String   @default("NGN")
  paymentId     Int      @unique
  reference     String   @unique
  PaymentMethod String?
  status        String   @default("pending")
  metadata      Json?
  createdAt     DateTime @default(now()) @db.Date
  updatedAt     DateTime @default(now()) @db.Date
  userId        String   @db.ObjectId
  user          User     @relation(fields: [userId], references: [id])
}
